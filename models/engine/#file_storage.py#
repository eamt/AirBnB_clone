#!/usr/bin/python3
"""FileStorage class"""

import json
import os.path

class FileStorage:
    """File storage """

    __file_path = 'objects.json'
    __objects = {}

    def all(self):
        """Return dict __objects"""
        
        return self.__objects

    def new(self, obj):
        """Save new object in  __objects"""
        key = obj.__class__.__name__ + "." + str(obj.id)
        self.__objects[key] = obj

    def save(self):
        """serialize the content of  __objects to the JSON file"""

        json_object = {}
        """ fill dictionary from __objects"""
        for key in self.__objects:
            json_object[key] = self.__objects[key].to_dict()
            
            with open(self.__file_path, 'w', enconding="utf-8") as f:
                json.dump(json_object, f)
                
    """def reload(self):"""
def reload(self):
        """
        method reload of class reload
        """
        my_dict = {'BaseModel': BaseModel, 'User': User, 'Place': Place,
                   'State': State, 'City': City, 'Amenity': Amenity,
                   'Review': Review}
        if os.path.isfile(FileStorage.__file_path):
            with open(FileStorage.__file_path, 'r', encoding='utf-8') as q:
                other_dict = json.loads(q.read())
                for key, val in other_dict.items():
                    self.new(my_dict[val['__class__']](**val))""" Deserializes the JSON file in __file_path"""
        """if path.exists(self.__file_path):"""
       """ if os.path.isfile(FileStorage.__file_path):
            with open(self.__file_path, 'r', encoding='utf-8') as f:
                json_dict = json.loads(f.read())
                for key, val in json_dict.items():
                    self.new(my_dict[val['__class__']](**val))"""

    def reload(self):
        """
        method reload of class reload
        """
        my_dict = {'BaseModel': BaseModel, 'User': User, 'Place': Place,
                   'State': State, 'City': City, 'Amenity': Amenity,
                   'Review': Review}
        if os.path.isfile(FileStorage.__file_path):
            with open(FileStorage.__file_path, 'r', encoding='utf-8') as q:
                other_dict = json.loads(q.read())
                for key, val in other_dict.items():
                    self.new(my_dict[val['__class__']](**val))

